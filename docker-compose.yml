version: "3.7"

services:
  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis-data:/data
    networks:
      - local
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ayuwoki
      POSTGRES_PASSWORD: ecomz10
      POSTGRES_DB: ecomz
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - local
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ayuwoki", "-d", "ecomz"]
      interval: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    entrypoint: ["migrate"]
    volumes:
      - ./libs/db/migration:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://ayuwoki:ecomz10@postgres:5432/ecomz?sslmode=disable",
        "up",
      ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - local

  auth-service:
    hostname: auth-service-host
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    restart: on-failure
    networks:
      - local
    volumes:
      - ./services/auth-service/cmd/config.yml:/cmd/config.yml
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      APP_NAME: "auth-rest-service"
      HTTP_PORT: "8080"
      DSN: "postgres://ayuwoki:ecomz10@postgres:5432/ecomz?sslmode=disable"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: ""
    ports:
      - "8080:8080"

networks:
  local:

volumes:
  redis-data:
  postgres-data:
